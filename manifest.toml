#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "woodpecker"
name = "Woodpecker"
description.en = "CI engine with great extensibility integrated with Github, Gitlab, Gitea, etc."
description.fr = "Un outil d'intégration continue extensible intégrable avec Github, Gitlab, Gitea etc."

version = "1.0.4~ynh1"

maintainers = ["Salamandar"]

[upstream]
license = "Apache-2.0"
website = "https://woodpecker-ci.org"
admindoc = "https://woodpecker-ci.org/docs/administration"
userdoc = "https://woodpecker-ci.org/docs/intro"
code = "https://github.com/woodpecker-ci/woodpecker"
cpe = "cpe:2.3:a:woodpecker-ci:woodpecker"

fund = "https://opencollective.com/woodpecker-ci"

[integration]
yunohost = ">= 11.1.21"
architectures = ["amd64", "arm64"]
multi_instance = true

ldap = false
sso = false

disk = "50M"
ram.build = "0M"
ram.runtime = "200M"

[install]
    [install.domain]
    type = "domain"

    [install.path]
    type = "path"
    default = "/woodpecker"

    [install.init_main_permission]
    type = "group"
    default = "visitors"

    [install.forge_type]
    ask.en = "Select the kind of forge you're connecting Woodpecker to"
    ask.fr = "Sélectionnez le type de forge à laquelle vous connectez Woodpecker"
    type = "select"
    choices.github = "Github"
    choices.gitlab = "Gitlab"
    choices.gitea = "Gitea / Forgejo"
    choices.bitbucket = "Bitbucket"
    default = "github"

    [install.forge_url]
    ask.en = "Provide the forge URL"
    ask.fr = "Entrez l'URL de la forge"
    type = "string"
    default = "https://myforge.tld"
    help.en = "Useless for Bitbucket and Github.com."
    help.fr = "Inutile pour Bitbucket et Github.com."

    [install.forge_client]
    ask.en = "Provide the forge OAuth Client ID"
    ask.fr = "Entrez l'ID de client OAuth de la forge"
    type = "string"
    default = ""

    [install.forge_secret]
    ask.en = "Provide the forge OAuth secret"
    ask.fr = "Entrez le secret OAuth de la forge"
    type = "string"
    default = ""

    # [install.admin]
    # type = "user"

    # [install.password]
    # # this is a generic question - ask strings are automatically handled by YunoHost's core
    # # Note that user-provided passwords questions are not automatically saved as setting
    # help.en = "Use the help field to add an information for the admin about this question."
    # help.fr = "Utilisez le champ aide pour ajouter une information à l'intention de l'administrateur à propos de cette question."
    # type = "password"

[resources]
    [resources.sources]

    [resources.sources.main]
    # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
    #    ynh_setup_source --dest_dir="$install_dir"
    # You can also define other assets than "main" and add --source_id="foobar" in the previous command
    amd64.url = "https://github.com/woodpecker-ci/woodpecker/releases/download/v1.0.4/woodpecker-server_linux_amd64.tar.gz"
    amd64.sha256 = "7908fda46406fe1e6653ff596bc8c82241a03806246ad690a52e93c7454ea5ff"

    arm64.url = "https://github.com/woodpecker-ci/woodpecker/releases/download/v1.0.4/woodpecker-server_linux_arm64.tar.gz"
    arm64.sha256 = "684ead27a4056919208d27156526f91f4d08fe4975ee22a987f3562edaa56002"

    autoupdate.strategy = "latest_github_release"
    autoupdate.asset.amd64 = "woodpecker-server_linux_amd64.tar.gz"
    autoupdate.asset.arm64 = "woodpecker-server_linux_arm64.tar.gz"

    in_subdir = false

    [resources.system_user]

    [resources.install_dir]

    [resources.data_dir]

    [resources.permissions]
    main.url = "/"

    [resources.ports]

    [resources.apt]
    packages = [
        "postgresql"
    ]

    [resources.database]
    type = "postgresql"
